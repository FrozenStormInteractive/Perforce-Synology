#!/bin/sh
# Copyright (C) 2000-2020 Synology Inc. All rights reserved.

### This script will be executed when package installed and upgraded.
### Actions after package installed.
### ex. create database, create symbolic link...

. /var/packages/${SYNOPKG_PKGNAME}/scripts/pkg_utils

P4PORT=1666
P4USER=$UiInput_SuperUserName
P4PASSWD=$UiInput_SuperUserPassword
P4="$P4Execute -u$P4USER -p$P4PORT"

EnableUnicode=$UiInput_EnableUnicode
EnableCaseSensitive=$UiInput_CaseSensitive

if [ "$EnableCaseSensitive" = y \
    -o "$EnableCaseSensitive" = Y \
    -o "$EnableCaseSensitive" = yes \
    -o "$EnableCaseSensitive" = true \
    -o "$EnableCaseSensitive" = 0 ]; then
    CASE=0
else
    CASE=1
fi

#
# Initialize db files on a specified server.  Sets case-sensitivity.
#
initialize_db()
{    
    [ -n "$P4ROOT" \
        -a -n "$P4PORT" \
        -a -n "$P4DExecute" \
        -a -d "$P4ROOT" \
        -a -d "$P4ROOT/../journals" \
        -a -d "$P4ROOT/../logs" \
        -a -x "$P4DExecute" ] && \
        $P4DExecute -r "$P4ROOT" -C $CASE -L ../logs/log -J ../journals/journal "-cset P4JOURNAL=../journals/journal" > /dev/null && \
        $P4DExecute -r "$P4ROOT" -C $CASE -L ../logs/log -J ../journals/journal "-cset P4LOG=../logs/log" > /dev/null
}

# Test if our server is Unicode enabled
server_uses_unicode()
{
    debug "Running $P4 -C none -ztag info"
    $P4 -C none -ztag info | grep '^... unicode enabled' > /dev/null
}

#
# Enable unicode mode on a specified server
#
enable_unicode()
{
    if [ -n "$P4ROOT" \
        -a -n "$P4DExecute" \
        -a -d "$P4ROOT" \
        -a -x "$P4DExecute" ]; then
        debug "Enabling unicode..."
        $P4DExecute -r "$P4ROOT" -xi > /dev/null 2>&1 || true
        debug "Unicode enabled."
        return 0
    else
        return 1
    fi
}

initialize_repository()
{
    if server_uses_unicode; then
        P4="$P4 -C utf8"
    else
        P4="$P4 -C none"
    fi
    debug "Creating super-user account..."
    debug "Running $P4 user"
    $P4 user -o | $P4 user -i 
    debug "$($P4 serverid)"

    debug "Setting configurables"
    $P4 configure set run.users.authorize=1 > /dev/null 2>&1 || true
    $P4 configure set dm.user.noautocreate=2 > /dev/null 2>&1 || true
    $P4 configure set server.start.unlicensed=1 > /dev/null 2>&1 || true

    $P4 configure set server.maxcommands=2500 > /dev/null 2>&1 || true
    $P4 configure set net.backlog=2048 > /dev/null 2>&1 || true
    $P4 configure set net.autotune=1 > /dev/null 2>&1 || true
    $P4 configure set db.monitor.shared=4096 > /dev/null 2>&1 || true
    $P4 configure set db.reorg.disable=1 > /dev/null 2>&1 || true
    $P4 configure set lbr.autocompress=1 > /dev/null 2>&1 || true

    $P4 configure set filesys.bufsize=1M > /dev/null 2>&1 || true
    $P4 configure set filesys.checklinks=2 > /dev/null 2>&1 || true
    $P4 configure set server.commandlimits=2 > /dev/null 2>&1 || true
    $P4 configure set "rejectList=P4EXP,version=2014.2" > /dev/null 2>&1 || true

    $P4 configure set rpl.checksum.auto=1 > /dev/null 2>&1 || true
    $P4 configure set rpl.checksum.change=2 > /dev/null 2>&1 || true
    $P4 configure set rpl.checksum.table=1 > /dev/null 2>&1 || true

    $P4 configure set proxy.monitor.level=1 > /dev/null 2>&1 || true
    $P4 configure set monitor=1 > /dev/null 2>&1 || true
    $P4 configure set server=3 > /dev/null 2>&1 || true

    $P4 configure set filesys.P4ROOT.min=2G > /dev/null 2>&1 || true
    $P4 configure set filesys.depot.min=2G > /dev/null 2>&1 || true
    $P4 configure set filesys.P4JOURNAL.min=2G > /dev/null 2>&1 || true
    $P4 configure set server.depot.root=../archives > /dev/null 2>&1 || true
    # $P4 configure set journalPrefix=../journals/${NAME} > /dev/null 2>&1 || true

    debug "Enabling structured logs"
    $P4 configure set serverlog.file.1=../logs/commands.csv > /dev/null 2>&1 || true
    $P4 configure set serverlog.retain.1=10 > /dev/null 2>&1 || true
    $P4 configure set serverlog.file.2=../logs/errors.csv > /dev/null 2>&1 || true
    $P4 configure set serverlog.retain.2=10 > /dev/null 2>&1 || true
    $P4 configure set serverlog.file.3=../logs/events.csv > /dev/null 2>&1 || true
    $P4 configure set serverlog.retain.3=10 > /dev/null 2>&1 || true
    $P4 configure set serverlog.file.4=../logs/integrity.csv > /dev/null 2>&1 || true
    $P4 configure set serverlog.retain.4=10 > /dev/null 2>&1 || true
    $P4 configure set serverlog.file.5=../logs/auth.csv > /dev/null 2>&1 || true
    $P4 configure set serverlog.retain.5=10 > /dev/null 2>&1 || true

    debug "Enabling unload and spec depots"
    $P4 depot -o -t spec spec     | $P4 depot -i > /dev/null
    $P4 admin updatespecdepot -a > /dev/null
    $P4 depot -o -t unload unload | $P4 depot -i > /dev/null

    debug "Moving P4PORT to server spec"
    $P4 server -i > /dev/null <<!
Type: server
Services: standard
Address: $P4PORT
!

    debug "Populating the typemap"
    $P4 typemap -i > /dev/null <<!
TypeMap:
    text //....asp
    text //....cnf
    text //....css
    text //....htm
    text //....html
    text //....inc
    text //....js
    text+w //....log
    text+w //....ini
    text+w //....pdm
    binary+Fl //....zip
    binary+Fl //....bz2
    binary+Fl //....rar
    binary+Fl //....gz
    binary+Fl //....avi
    binary+Fl //....jpg
    binary+Fl //....jpeg
    binary+Fl //....mpg
    binary+Fl //....gif
    binary+Fl //....tif
    binary+Fl //....mov
    binary+Fl //....jar
    binary+l //....ico
    binary+l //....exp
    binary+l //....btr
    binary+l //....bmp
    binary+l //....doc
    binary+l //....dot
    binary+l //....xls
    binary+l //....ppt
    binary+l //....pdf
    binary+l //....tar
    binary+l //....exe
    binary+l //....dll
    binary+l //....lib
    binary+l //....bin
    binary+l //....class
    binary+l //....war
    binary+l //....ear
    binary+l //....so
    binary+l //....rpt
    binary+l //....cfm
    binary+l //....ma
    binary+l //....mb
    binary+l //....pac
    binary+l //....m4a
    binary+l //....mp4
    binary+l //....aac
    binary+l //....wma
    binary+l //....docx
    binary+l //....pptx
    binary+l //....xlsx
    binary+l //....png
    binary+l //....raw
    binary+l //....odt
    binary+l //....ods
    binary+l //....odg
    binary+l //....odp
    binary+l //....otg
    binary+l //....ots
    binary+l //....ott
    binary+l //....psd
    binary+l //....sxw
!

    debug "Initializing protections table..."
    debug "Running $P4 protect"
    $P4 protect -o | sed -e "/write user/a \\\\tlist user * * -//spec/..." | $P4 protect -i
    debug "Setting security level to 3 (high)..."
    debug "Running $P4 counter -f security 3"
    $P4 counter -f security 3
    debug "Setting password..."
    debug "Running $P4 passwd"
    $P4 passwd > /dev/null <<!
$P4PASSWD
$P4PASSWD
!

    debug "Creating ticket for user"
    debug "Running $P4 login"
    $P4 login > /dev/null <<!
$P4PASSWD
!
    debug "Confurables setup complete"
    debug "$($P4 configure show)"

    return true
}

configure_server()
{
    [ ! -d "$P4ROOT/root" ]     && mkdir -p "$P4ROOT/root"
    [ ! -d "$P4ROOT/root/ssl" ] && mkdir -p "$P4ROOT/root/ssl"
    [ ! -d "$P4ROOT/journals" ] && mkdir -p "$P4ROOT/journals"
    [ ! -d "$P4ROOT/logs" ]     && mkdir -p "$P4ROOT/logs"
    [ ! -d "$P4ROOT/archives" ] && mkdir -p "$P4ROOT/archives"

    P4ROOT="$P4ROOT/root"

    initialize_db

    if [ "$EnableUnicode" = y \
        -o "$EnableUnicode" = Y \
        -o "$EnableUnicode" = yes \
        -o "$EnableUnicode" = true \
        -o "$EnableUnicode" = 0 ]; then
        enable_unicode
    fi

    [ -n "$P4ROOT" \
        -a -n "$P4PORT" \
        -a -n "$P4DExecute" \
        -a -d "$P4ROOT" \
        -a -d "$P4ROOT/../journals" \
        -a -d "$P4ROOT/../logs" \
        -a -x "$P4DExecute" ] && \
        $P4DExecute -r "$P4ROOT" -C $CASE -L ../logs/log -J ../journals/journal -p $P4PORT --pid-file=$SYNOPKG_PKGTMP/p4d.pid -d > /dev/null

    initialize_repository

    kill -15 `cat $SYNOPKG_PKGTMP/p4d.pid`
    # $P4 admin stop > /dev/null 2>&1 || true
}

[ ! $(server_initialized "$P4ROOT") ] && configure_server

cat <<EOF > "${HelixCoreServerConfigFile}"
P4ROOT=$SYNOPKG_PKGDEST_VOL/$SHARE/root
P4PORT=$P4PORT
P4CASE=$CASE
EOF

exit 0
